/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dack;

import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;


/**
 *
 * @author nguyen tran hoa
 */
public class frm_TKB extends javax.swing.JFrame {

    /**
     * Creates new form frm_TKB
     */
    public frm_TKB() {
        initComponents();
        loadTKB();
    }
  public void loadTKB() {
    String SV_ID = JOptionPane.showInputDialog(null, "Nhập mã sinh viên:");
    if (SV_ID == null) {
        return; // Người dùng đã nhấn Cancel hoặc đóng hộp thoại
    }
    
    String password = JOptionPane.showInputDialog(null, "Nhập mật khẩu:");
    if (password == null) {
        return; // Người dùng đã nhấn Cancel hoặc đóng hộp thoại
    }
    
    boolean isAuthenticated = Server.authenticate(SV_ID, password);

    if (isAuthenticated) {
        // Tiếp tục xử lý dữ liệu
        String SQLQuery = "SELECT tb.*, p.TenPH, d.Day_Name, t.Time_Name, hp.SoTiet, hp.TenHP\n" +
                         "FROM TKB tb\n" +
                         "INNER JOIN HocPhan hp ON tb.HP_ID = hp.HP_ID\n" +
                         "INNER JOIN Time t ON hp.Time_ID = t.Time_ID\n" +
                         "INNER JOIN PhongHoc p ON hp.PH_ID = p.PH_ID\n" +
                         "INNER JOIN DayTime d ON hp.Day_ID = d.Day_ID\n" +
                         "INNER JOIN SinhVien sv ON tb.SV_ID = sv.SV_ID\n" +
                         "WHERE tb.SV_ID = ? AND sv.Password = ?;";

        ResultSet rs = null;
        DefaultTableModel tbModel = (DefaultTableModel) tb_TKB.getModel();
        Object obj[] = new Object[7]; // Đảm bảo số lượng cột phù hợp
        tbModel.setRowCount(0);
        try {
            Connection connection = ConnectionDB.getConnection(); // Lấy đối tượng Connection từ ConnectionDB
            PreparedStatement statement = connection.prepareStatement(SQLQuery);
            statement.setString(1, SV_ID);
            statement.setString(2, password);
            rs = statement.executeQuery();
            while(rs.next())
           {
               obj[0]=tb_TKB.getRowCount() ;
               
               obj[1] = rs.getString("Day_Name");
               obj[2] = rs.getString("TenHP");
               obj[3] = rs.getString("Time_Name");
               obj[4] = rs.getString("TenPH");
               obj[5] = rs.getString("SoTiet");
               
               
               tbModel.addRow(obj);
               
           }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (rs != null) {
                try {
                    rs.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    } else {
        // Xử lý khi xác thực không thành công
        JOptionPane.showMessageDialog(null, "Mã sinh viên hoặc mật khẩu không chính xác.");
    }
}
    
    
    
    private void reloadTKB() {
    DefaultTableModel tbModel = (DefaultTableModel) tb_TKB.getModel();
    tbModel.setRowCount(0); // Xóa tất cả các dòng trong bảng tb_TKB
    loadTKB(); // Gọi lại phương thức loadTKB() để tải lại dữ liệu vào bảng tb_TKB
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_TKB = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Thời khóa biểu ");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(253, 253, 253))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(41, 41, 41))
        );

        tb_TKB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Ngày ", "Tên học phần ", "Thời gian ", "Phòng học ", "Số tiết "
            }
        ));
        jScrollPane1.setViewportView(tb_TKB);

        jButton1.setText("Cập nhật ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Về lại trang chủ ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Connection conn = null;
        Statement stm = null;
        try
        {
                  String insertQuery = "INSERT INTO TKB (SV_ID, HP_ID)\n" +
        "SELECT ct.SV_ID, ct.HP_ID\n" +
        "FROM ChiTiet ct\n" +
        "WHERE NOT EXISTS (SELECT 1 FROM TKB tk WHERE tk.SV_ID = ct.SV_ID AND tk.HP_ID = ct.HP_ID)";
        conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=DACK;encrypt=true;trustServerCertificate=true", "hoa284", "123456@");
        stm = conn.createStatement();
        int rowsAffected = stm.executeUpdate(insertQuery);
        if (rowsAffected > 0) {
            // In thông báo thành công
            JOptionPane.showMessageDialog(this, "Đã cập nhật", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            reloadTKB(); // Gọi phương thức loadTKB() để tải lại bảng tb_TKB
        } else {
            // In thông báo lỗi
            JOptionPane.showMessageDialog(this, "Không có môn học mới ", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
        }catch(Exception e)
        {
            e.printStackTrace();
        }finally {
        // Đóng kết nối và tuyên bố
        try {
            if (stm != null)
                stm.close();
            if (conn != null)
                conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        frm_Main form3 =new frm_Main();
        form3.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_TKB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_TKB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_TKB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_TKB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_TKB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_TKB;
    // End of variables declaration//GEN-END:variables
}
